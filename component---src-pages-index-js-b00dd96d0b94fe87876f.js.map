{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/containers/actions/tasks.js","webpack:///./src/components/task.js","webpack:///./src/components/todoapp.js","webpack:///./src/components/footer.js","webpack:///./src/containers/reducers/index.js","webpack:///./src/containers/reducers/tasks.js","webpack:///./src/containers/store.js","webpack:///./src/pages/index.js","webpack:///./gatsby-config.js"],"names":["Header","render","title","siteMetadata","description","react_default","a","createElement","className","Component","addTask","type","changeTaskStatus","idTask","Task","props","_this","_Component","call","this","changeStatus","bind","assertThisInitialized_default","id","renderButton","status","href","key","onClick","connect","state","tasks","dispatch","bindActionCreators","taskActions","TodoApp","newTask","setNewTask","event","setState","Object","assign","target","value","placeholder","onChange","onKeyPress","map","task","components_task","Footer","fa","combineReducers","action","concat","Math","random","store","createStore","reducers","App","fullTitle","es","react","Helmet_default","htmlAttributes","lang","meta","name","content","header_Header","todoapp","footer_Footer","module","exports","author","pathPrefix","plugins"],"mappings":"8QAGqBA,4FACnBC,kBAAU,IACAC,EAAuBC,eAAvBD,MAAOE,EAAgBD,eAAhBC,YAEf,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASN,GACvBG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYJ,UATFK,4DCH7B,SAASC,EAASN,GACvB,MAAO,CACLO,KAAM,WACNP,eAIG,SAASQ,EAAkBC,GAChC,MAAO,CACLF,KAAM,qBACNE,cCJEC,cACJ,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAClBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAEKC,aAAeJ,EAAKI,aAAaC,KAAlBC,QAAAN,KAHFA,sCAMpBI,wBACED,KAAKJ,MAAMH,iBAAiBO,KAAKJ,MAAMQ,OAGzCC,wBASE,OANIL,KAAKJ,MAAMU,OACJpB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBkB,KAAK,KAAKP,KAAKJ,MAAMX,aAEtDC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASkB,KAAK,KAAKP,KAAKJ,MAAMX,gBAMxDH,kBACE,OACEI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAemB,IAAKR,KAAKJ,MAAMY,IAAKC,QAAST,KAAKC,cAC5DD,KAAKK,oBA1BKf,aAuCJoB,cAPS,SAAAC,GAAK,MAAK,CAChCC,MAAOD,EAAMC,QAGY,SAAAC,GAAQ,OACjCC,YAAmBC,EAAaF,IAEnBH,CAA6Cf,GCrCtDqB,cACJ,SAAAA,EAAapB,GAAO,IAAAC,EAAA,OAClBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAEKW,MAAQ,CACXM,QAAS,IAGXpB,EAAKqB,WAAarB,EAAKqB,WAAWhB,KAAhBC,QAAAN,KAClBA,EAAKN,QAAUM,EAAKN,QAAQW,KAAbC,QAAAN,KARGA,sCAWpBqB,oBAAYC,GACQ,UAAdA,EAAMX,IACRR,KAAKT,UAELS,KAAKoB,SAALC,OAAAC,OAAA,GACKtB,KAAKW,MADV,CAEEM,QAASE,EAAMI,OAAOC,YAK5BjC,mBAAW,IACD0B,EAAYjB,KAAKW,MAAjBM,QAEQ,KAAZA,IACFjB,KAAKJ,MAAML,QAAQ0B,GAEnBjB,KAAKoB,SAAS,CACZH,QAAS,SAKfnC,kBACE,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SACEC,UAAU,QACVG,KAAK,OACLiC,YAAY,eACZD,MAAOxB,KAAKW,MAAMM,QAClBS,SAAU1B,KAAKkB,WACfS,WAAY3B,KAAKkB,cAGrBhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBoB,QAAST,KAAKT,SAApD,SAIJL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAEXW,KAAKJ,MAAMgB,MAAMgB,IAAI,SAAAC,GAAI,OACvB3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAMtB,IAAKqB,EAAKzB,GAAIA,GAAIyB,EAAKzB,GAAInB,YAAa4C,EAAK5C,YAAaqB,OAAQuB,EAAKvB,iBAzDrEhB,aAyEPoB,cAPS,SAAAC,GAAK,MAAK,CAChCC,MAAOD,EAAMC,QAGY,SAAAC,GAAQ,OACjCC,YAAmBC,EAAaF,IAEnBH,CAA6CM,YC9EvCe,4FACnBjD,kBACE,OACEI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAY,OAASkB,KAAK,gDAA+CrB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,OAExE9C,EAAAC,EAAAC,cAAA,yBAHN,OAGkCF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,8BAAR,oBAHlC,gCAK6BrB,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,sFAAR,OAC3BrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAuBH,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,cAXZ1C,aCCrB2C,kBAAgB,CAC7BrB,MCLa,SAAgBD,EAAYuB,GACzC,YADiD,IAApBvB,MAAQ,IAC7BuB,EAAO1C,MACf,IAAK,WACH,OACKmB,EADLwB,OAAA,CAEE,CACE/B,GAAIgC,KAAKC,SACTpD,YAAaiD,EAAOjD,YACpBqB,QAAQ,KAGd,IAAK,qBACH,OAAOK,EAAMiB,IAAI,SAAAC,GAIf,OAHIA,EAAKzB,KAAO8B,EAAOxC,SACrBmC,EAAKvB,QAAUuB,EAAKvB,QAEfuB,IAEX,QACE,OAAOlB,MCbI2B,EAFDC,YAAYC,UCiCXC,UAxBH,WAAM,IACR1D,EAAuBC,eAAvBD,MAAOE,EAAgBD,eAAhBC,YACTyD,EAAgB3D,EAAP,MAAoBE,EAEnC,OACEC,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAUL,MAAOA,GACfpD,EAAAC,EAAAC,cAACwD,EAAA,SAAD,KACE1D,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACE2D,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASjE,IACvCF,MAAO2D,IAETxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAC+D,EAAD,MAEAjE,EAAAC,EAAAC,cAACgE,EAAD,MAEAlE,EAAAC,EAAAC,cAACiE,EAAD,6BC9BVC,EAAOC,QAAU,CACfvE,aAAc,CACZD,MAAO,UACPE,YAAa,mCACbuE,OAAQ,oBAEVC,WAAY,IACZC,QAAS,CACP","file":"component---src-pages-index-js-b00dd96d0b94fe87876f.js","sourcesContent":["import React, { Component } from 'react'\nimport { siteMetadata } from '../../gatsby-config'\n\nexport default class Header extends Component {\n  render () {\n    const { title, description } = siteMetadata\n\n    return (\n      <section className=\"hero is-info\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">{title}</h1>\n            <h2 className=\"subtitle\">{description}</h2>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n","export function addTask (description) {\n  return {\n    type: 'ADD_TASK',\n    description\n  }\n}\n\nexport function changeTaskStatus (idTask) {\n  return {\n    type: 'CHANGE_TASK_STATUS',\n    idTask\n  }\n}\n","import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as taskActions from '../containers/actions/tasks'\n\nclass Task extends Component {\n  constructor (props) {\n    super(props)\n\n    this.changeStatus = this.changeStatus.bind(this)\n  }\n\n  changeStatus () {\n    this.props.changeTaskStatus(this.props.id)\n  }\n\n  renderButton () {\n    let button\n\n    if (this.props.status) {\n      button = <a className=\"button is-success\" href=\"#\">{this.props.description}</a>\n    } else {\n      button = <a className=\"button\" href=\"#\">{this.props.description}</a>\n    }\n\n    return (button)\n  }\n\n  render () {\n    return (\n      <p className=\"task control\" key={this.props.key} onClick={this.changeStatus}>\n        {this.renderButton()}\n      </p>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(taskActions, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task)\n","import React, { Component } from 'react'\n\nimport Task from './task'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport * as taskActions from '../containers/actions/tasks'\n\nclass TodoApp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      newTask: '',\n    }\n\n    this.setNewTask = this.setNewTask.bind(this)\n    this.addTask = this.addTask.bind(this)\n  }\n\n  setNewTask (event) {\n    if (event.key === 'Enter') {\n      this.addTask()\n    } else {\n      this.setState({\n        ...this.state,\n        newTask: event.target.value\n      })\n    }\n  }\n\n  addTask () {\n    const { newTask } = this.state\n\n    if (newTask !== '') {\n      this.props.addTask(newTask)\n\n      this.setState({\n        newTask: '',\n      })\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"todoapp content\">\n        <div className=\"new-task form field has-addons\">\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Add new task\"\n              value={this.state.newTask}\n              onChange={this.setNewTask}\n              onKeyPress={this.setNewTask}\n            />\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-success\" onClick={this.addTask}>Add</button>\n          </div>\n        </div>\n\n        <div className=\"tasks field is-grouped is-grouped-multiline\">\n          {\n            this.props.tasks.map(task => (\n              <Task key={task.id} id={task.id} description={task.description} status={task.status} />\n            ))\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(taskActions, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoApp)\n","import React, { Component } from 'react'\nimport { FaHeart, FaGithub } from 'react-icons/fa'\n\nexport default class Footer extends Component {\n  render () {\n    return (\n      <footer className=\"footer\">\n        <div className=\"content\">\n          <p>\n            <a className={ 'icon' } href=\"www.github.com.br/gustafsilva/todoapp-gatsby\"><FaGithub />\n\n            </a><strong>TodoApp</strong> by <a href=\"www.github.com/gustafsilva\">Gustavo F. Silva</a>.\n\n            The source code is licensed<a href=\"https://github.com/gustafsilva/todoapp-gatsby/blob/feature-remove-warnings/LICENSE\">MIT</a>\n            <i className=\"icon has-text-danger\"><FaHeart /></i>\n          </p>\n        </div>\n      </footer>\n    )\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport tasks from './tasks'\n\nexport default combineReducers({\n  tasks\n})\n","export default function tasks (state = [], action) {\n  switch (action.type) {\n  case 'ADD_TASK':\n    return [\n      ...state,\n      {\n        id: Math.random(),\n        description: action.description,\n        status: false\n      }\n    ]\n  case 'CHANGE_TASK_STATUS':\n    return state.map(task => {\n      if (task.id === action.idTask) {\n        task.status = !task.status\n      }\n      return task\n    })\n  default:\n    return state\n  }\n}\n","import { createStore } from 'redux'\n\nimport reducers from './reducers'\n\nconst store = createStore(reducers)\n\nexport default store\n","import React, { Fragment } from 'react'\nimport Helmet from 'react-helmet'\nimport { Provider } from 'react-redux'\n\nimport Header from '../components/header'\nimport TodoApp from '../components/todoapp'\nimport Footer from '../components/footer'\n\nimport { siteMetadata } from '../../gatsby-config'\nimport store from '../containers/store'\n\nimport style from '../sass/style.scss' // eslint-disable-line no-unused-vars\n\nconst App = () => {\n  const { title, description } = siteMetadata\n  const fullTitle = `${ title } | ${ description }`\n\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: description }]}\n          title={fullTitle}\n        />\n        <div className=\"has-text-centered\">\n          <Header />\n\n          <TodoApp />\n\n          <Footer />\n        </div>\n      </Fragment>\n    </Provider>\n  )\n}\n\nexport default App\n","module.exports = {\n  siteMetadata: {\n    title: 'TodoApp',\n    description: 'Simple App with React and Gatsby',\n    author: 'Gustavo F. Silva',\n  },\n  pathPrefix: '/',\n  plugins: [\n    'gatsby-plugin-sass',\n  ]\n}\n"],"sourceRoot":""}